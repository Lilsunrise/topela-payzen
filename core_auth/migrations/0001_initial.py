# Generated by Django 5.0.4 on 2024-04-25 15:15

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('complement', models.CharField(blank=True, max_length=76, null=True)),
                ('street', models.CharField(max_length=38)),
                ('mailbox_compl', models.CharField(blank=True, max_length=38, null=True)),
                ('zipcode', models.CharField(max_length=38)),
                ('town', models.CharField(max_length=38)),
                ('long', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
            ],
            options={
                'verbose_name': 'Adresse',
                'verbose_name_plural': 'Adresses',
            },
        ),
        migrations.CreateModel(
            name='BusinessRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('nature', models.CharField(choices=[('g_lst_bizRel_nature_B2B', 'g_lst_bizRel_nature_B2B'), ('g_lst_bizRel_nature_B2C', 'g_lst_bizRel_nature_B2C'), ('g_lst_bizRel_nature_B2B2C', 'g_lst_bizRel_nature_B2B2C'), ('g_lst_bizRel_nature_B2P', 'g_lst_bizRel_nature_B2P'), ('g_lst_bizRel_nature_B2B2P', 'g_lst_bizRel_nature_B2B2P'), ('g_lst_bizRel_nature_OTHER', 'g_lst_bizRel_nature_OTHER')], max_length=32)),
                ('status', models.CharField(choices=[('g_lst_gen_status_pending', 'g_lst_gen_status_pending'), ('g_lst_gen_status_active', 'g_lst_gen_status_active'), ('g_lst_gen_status_inactive', 'g_lst_gen_status_inactive'), ('g_lst_gen_status_archived', 'g_lst_gen_status_archived'), ('g_lst_gen_status_erased', 'g_lst_gen_status_erased')], default='g_lst_gen_status_active', max_length=32)),
            ],
            options={
                'verbose_name': "Relation d'Affaire",
                'verbose_name_plural': "Relations d'Affaire",
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('pricing', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duration', models.CharField(default='monthly', max_length=50)),
                ('recurrent_payment_date', models.PositiveSmallIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(error_messages='A user with that username already exists.', help_text='Required. 150 characters or fewer', max_length=30, unique=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('gender', models.CharField(choices=[('g_lst_gender_mister', 'g_lst_gender_mister'), ('g_lst_gender_madam', 'g_lst_gender_madam'), ('g_lst_gender_miss', 'g_lst_gender_miss'), ('g_lst_gender_undef', 'g_lst_gender_undef')], default='g_lst_gender_undef', max_length=32)),
                ('landline', models.CharField(blank=True, max_length=15, null=True)),
                ('last_failed_login_timestamp', models.DateTimeField(blank=True, null=True)),
                ('phone_verified', models.BooleanField(default=False)),
                ('email_verified_status', models.CharField(choices=[('g_lst_account_email_status_verified', 'g_lst_account_email_status_verified'), ('g_lst_account_email_status_notverified', 'g_lst_account_email_status_notverified'), ('g_lst_account_email_status_invalid', 'g_lst_account_email_status_invalid'), ('g_lst_account_email_status_inaccurate', 'g_lst_account_email_status_inaccurate')], default='g_lst_account_email_status_notverified', max_length=40)),
                ('otp_retries', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('g_lst_gen_status_pending', 'g_lst_gen_status_pending'), ('g_lst_gen_status_active', 'g_lst_gen_status_active'), ('g_lst_gen_status_inactive', 'g_lst_gen_status_inactive'), ('g_lst_gen_status_archived', 'g_lst_gen_status_archived'), ('g_lst_gen_status_erased', 'g_lst_gen_status_erased')], default='g_lst_gen_status_active', max_length=32)),
                ('failed_login_attempts', models.PositiveSmallIntegerField(default=0)),
                ('blocked_until', models.DateTimeField(blank=True, null=True)),
                ('notif_email', models.BooleanField(default=False)),
                ('notif_phone', models.BooleanField(default=False)),
                ('notif_push_app', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('disable_date', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BusinessAgreement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('nature', models.CharField(choices=[('g_lst_bizAgr_nature_onetime', 'g_lst_bizAgr_nature_onetime'), ('g_lst_bizAgr_nature_subscription', 'g_lst_bizAgr_nature_subscription')], db_index=True, default='g_lst_bizAgr_nature_onetime', max_length=255, verbose_name="Nature de l'affaire")),
                ('status', models.CharField(choices=[('g_lst_bizAgr_status_active', 'Active'), ('g_lst_bizAgr_status_aborted', 'Aborted'), ('g_lst_bizAgr_status_terminated', 'Terminated')], db_index=True, default='g_lst_bizAgr_status_active', max_length=255, verbose_name="Statut de l'affaire")),
                ('business_relationship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_auth.businessrelationship', verbose_name="Relation d'Affaire")),
            ],
            options={
                'verbose_name': 'Affaire',
                'verbose_name_plural': 'Affaires',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64)),
                ('status', models.CharField(choices=[('g_lst_gen_status_pending', 'g_lst_gen_status_pending'), ('g_lst_gen_status_active', 'g_lst_gen_status_active'), ('g_lst_gen_status_inactive', 'g_lst_gen_status_inactive'), ('g_lst_gen_status_archived', 'g_lst_gen_status_archived'), ('g_lst_gen_status_erased', 'g_lst_gen_status_erased')], default='g_lst_gen_status_active', max_length=32)),
                ('ctype', models.CharField(choices=[('g_client_type_Individual', 'Individual'), ('g_client_type_Individual', 'Enterprise')], max_length=24)),
                ('accounts', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_party_address', to='core_auth.address')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.AddField(
            model_name='businessrelationship',
            name='consumer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core_auth.client'),
        ),
        migrations.CreateModel(
            name='Intermediary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64)),
                ('status', models.CharField(choices=[('g_lst_gen_status_pending', 'g_lst_gen_status_pending'), ('g_lst_gen_status_active', 'g_lst_gen_status_active'), ('g_lst_gen_status_inactive', 'g_lst_gen_status_inactive'), ('g_lst_gen_status_archived', 'g_lst_gen_status_archived'), ('g_lst_gen_status_erased', 'g_lst_gen_status_erased')], default='g_lst_gen_status_active', max_length=32)),
                ('accounts', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_party_address', to='core_auth.address')),
            ],
            options={
                'verbose_name': 'Intermédiaire',
                'verbose_name_plural': 'Intermédiaires',
            },
        ),
        migrations.AddField(
            model_name='businessrelationship',
            name='intermediary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_auth.intermediary'),
        ),
        migrations.CreateModel(
            name='Pro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64)),
                ('status', models.CharField(choices=[('g_lst_gen_status_pending', 'g_lst_gen_status_pending'), ('g_lst_gen_status_active', 'g_lst_gen_status_active'), ('g_lst_gen_status_inactive', 'g_lst_gen_status_inactive'), ('g_lst_gen_status_archived', 'g_lst_gen_status_archived'), ('g_lst_gen_status_erased', 'g_lst_gen_status_erased')], default='g_lst_gen_status_active', max_length=32)),
                ('subscribed', models.BooleanField(default=False)),
                ('company_name', models.CharField(max_length=64)),
                ('company_reference', models.CharField(blank=True, max_length=64, null=True)),
                ('company_compl_reference', models.CharField(blank=True, max_length=64, null=True)),
                ('company_activity_code', models.CharField(blank=True, max_length=64, null=True)),
                ('company_share_capital', models.IntegerField(blank=True, null=True)),
                ('company_legal_status', models.CharField(blank=True, max_length=32, null=True)),
                ('company_tax_number', models.CharField(blank=True, max_length=64, null=True)),
                ('company_phone', models.CharField(blank=True, max_length=32, null=True)),
                ('company_email', models.CharField(blank=True, max_length=64, null=True)),
                ('specialty', models.CharField(blank=True, max_length=32, null=True)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('platform_code', models.CharField(max_length=6, unique=True)),
                ('insurance_name', models.CharField(blank=True, max_length=64, null=True)),
                ('insurance_warranty', models.CharField(blank=True, max_length=128, null=True)),
                ('insurance_policy_number', models.CharField(blank=True, max_length=64, null=True)),
                ('insurance_geo_coverage', models.CharField(blank=True, max_length=128, null=True)),
                ('insurance_address', models.CharField(blank=True, max_length=256, null=True)),
                ('website_url', models.CharField(blank=True, max_length=256, null=True)),
                ('iban', models.CharField(blank=True, max_length=27, null=True)),
                ('swift', models.CharField(blank=True, max_length=11, null=True)),
                ('additional_conditions', models.CharField(blank=True, max_length=256, null=True)),
                ('accepted_payment_modes', models.CharField(blank=True, max_length=256, null=True)),
                ('favorite_color', models.CharField(default='#49AFDA', max_length=10)),
                ('proposal_validity_duration', models.IntegerField(default=30)),
                ('payment_max_delay', models.IntegerField(default=30)),
                ('sales_conditions', models.TextField(blank=True, null=True)),
                ('profile_visible', models.BooleanField(default=False)),
                ('profile_verified', models.BooleanField(default=False)),
                ('accounts', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_party_address', to='core_auth.address')),
            ],
            options={
                'verbose_name': 'Artisan',
                'verbose_name_plural': 'Artisans',
            },
        ),
        migrations.AddField(
            model_name='businessrelationship',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_auth.pro'),
        ),
        migrations.CreateModel(
            name='SaaSWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('proposal', models.CharField(max_length=10)),
                ('status', models.CharField(choices=[('g_lst_work_status_pending', 'g_lst_work_status_pending'), ('g_lst_work_status_ongoing', 'g_lst_work_status_ongoing'), ('g_lst_work_status_terminated', 'g_lst_work_status_terminated'), ('g_lst_work_status_cancelled', 'g_lst_work_status_cancelled')], db_index=True, max_length=50)),
                ('worktype', models.CharField(choices=[('g_lst_work_type_construct', 'g_lst_work_type_construct')], db_index=True, max_length=50)),
                ('work_start_date', models.DateField()),
                ('work_end_date', models.DateField()),
                ('practical_info', models.CharField(blank=True, max_length=512, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('client_reserves', models.TextField(blank=True, null=True)),
                ('cancellation_date', models.DateField(blank=True, null=True)),
                ('cancellation_reason', models.CharField(blank=True, max_length=512, null=True)),
                ('abortion_request_date', models.DateField(blank=True, null=True)),
                ('abortion_reason', models.CharField(blank=True, max_length=512, null=True)),
                ('title', models.CharField(db_index=True, max_length=256)),
                ('abortion_request_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='abortion_request_account', to=settings.AUTH_USER_MODEL)),
                ('business_agreement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_auth.businessagreement')),
                ('cancellation_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cancellation_account', to=settings.AUTH_USER_MODEL)),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saas_works', to='core_auth.offer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='businessrelationship',
            unique_together={('intermediary', 'provider', 'consumer')},
        ),
    ]
